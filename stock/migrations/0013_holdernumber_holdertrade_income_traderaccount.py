# Generated by Django 2.2 on 2020-03-18 13:29

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('stock', '0012_auto_20200315_0816'),
    ]

    operations = [
        migrations.CreateModel(
            name='HolderNumber',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ts_code', models.CharField(max_length=15, verbose_name='TS代码')),
                ('ann_date', models.CharField(max_length=8, verbose_name='公告日期')),
                ('end_date', models.CharField(max_length=8, verbose_name='截止日期')),
                ('holder_num', models.FloatField(verbose_name='股东户数')),
            ],
            options={
                'db_table': 'holder_number',
            },
        ),
        migrations.CreateModel(
            name='HolderTrade',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ts_code', models.CharField(max_length=15, verbose_name='TS代码')),
                ('ann_date', models.CharField(max_length=8, verbose_name='公告日期')),
                ('holder_name', models.CharField(max_length=15, verbose_name='股东名称')),
                ('holder_type', models.CharField(max_length=15, verbose_name='股东类型G高管P个人C公司')),
                ('in_de', models.CharField(max_length=15, verbose_name='类型')),
                ('change_vol', models.FloatField(verbose_name='变动数量')),
                ('change_ratio', models.FloatField(verbose_name='占流通比例（%）')),
                ('after_share', models.FloatField(verbose_name='变动后持股')),
                ('after_ratio', models.FloatField(verbose_name='变动后占流通比例（%）')),
                ('avg_price', models.FloatField(verbose_name='平均价格')),
                ('total_share', models.FloatField(verbose_name='持股总数')),
                ('begin_date', models.CharField(max_length=15, verbose_name='TS代码')),
                ('close_date', models.CharField(max_length=15, verbose_name='TS代码')),
            ],
            options={
                'db_table': 'holder_trade',
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ts_code', models.CharField(max_length=15, verbose_name='TS代码')),
                ('ann_date', models.CharField(max_length=15, verbose_name='公告日期')),
                ('f_ann_date', models.CharField(max_length=15, verbose_name='实际公告日期')),
                ('end_date', models.CharField(max_length=15, verbose_name='报告期')),
                ('report_type', models.CharField(max_length=15, verbose_name='报告类型')),
                ('comp_type', models.CharField(max_length=1, verbose_name='公司类型(1一般工商业2银行3保险4证券)')),
                ('basic_eps', models.FloatField(verbose_name='基本每股收益')),
                ('diluted_eps', models.FloatField(verbose_name='稀释每股收益')),
                ('total_revenue', models.FloatField(verbose_name='营业总收入')),
                ('revenue', models.FloatField(verbose_name='营业收入')),
                ('int_income', models.FloatField(verbose_name='利息收入')),
                ('prem_earned', models.FloatField(verbose_name='已赚保费')),
                ('comm_income', models.FloatField(verbose_name='手续费及佣金收入')),
                ('n_commis_income', models.FloatField(verbose_name='手续费及佣金净收入')),
                ('n_oth_income', models.FloatField(verbose_name='其他经营净收益')),
                ('n_oth_b_income', models.FloatField(verbose_name='其他业务净收益')),
                ('prem_income', models.FloatField(verbose_name='保险业务收入')),
                ('out_prem', models.FloatField(verbose_name='分出保费')),
                ('une_prem_reser', models.FloatField(verbose_name='提取未到期责任准备金')),
                ('reins_income', models.FloatField(verbose_name='分保费收入')),
                ('n_sec_tb_income', models.FloatField(verbose_name='代理买卖证券业务净收入')),
                ('n_sec_uw_income', models.FloatField(verbose_name='证券承销业务净收入')),
                ('n_asset_mg_income', models.FloatField(verbose_name='受托客户资产管理业务净收入')),
                ('oth_b_income', models.FloatField(verbose_name='其他业务收入')),
                ('fv_value_chg_gain', models.FloatField(verbose_name='公允价值变动净收益')),
                ('invest_income', models.FloatField(verbose_name='投资净收益')),
                ('ass_invest_income', models.FloatField(verbose_name='对联营企业和合营企业的投资收益')),
                ('forex_gain', models.FloatField(verbose_name='汇兑净收益')),
                ('total_cogs', models.FloatField(verbose_name='营业总成本')),
                ('oper_cost', models.FloatField(verbose_name='营业成本')),
                ('int_exp', models.FloatField(verbose_name='利息支出')),
                ('comm_exp', models.FloatField(verbose_name='手续费及佣金支出')),
                ('biz_tax_surchg', models.FloatField(verbose_name='营业税金及附加')),
                ('sell_exp', models.FloatField(verbose_name='销售费用')),
                ('admin_exp', models.FloatField(verbose_name='管理费用')),
                ('fin_exp', models.FloatField(verbose_name='财务费用')),
                ('assets_impair_loss', models.FloatField(verbose_name='资产减值损失')),
                ('prem_refund', models.FloatField(verbose_name='退保金')),
                ('compens_payout', models.FloatField(verbose_name='赔付总支出')),
                ('reser_insur_liab', models.FloatField(verbose_name='提取保险责任准备金')),
                ('div_payt', models.FloatField(verbose_name='保户红利支出')),
                ('reins_exp', models.FloatField(verbose_name='分保费用')),
                ('oper_exp', models.FloatField(verbose_name='营业支出')),
                ('compens_payout_refu', models.FloatField(verbose_name='摊回赔付支出')),
                ('insur_reser_refu', models.FloatField(verbose_name='摊回保险责任准备金')),
                ('reins_cost_refund', models.FloatField(verbose_name='摊回分保费用')),
                ('other_bus_cost', models.FloatField(verbose_name='其他业务成本')),
                ('operate_profit', models.FloatField(verbose_name='营业利润')),
                ('non_oper_income', models.FloatField(verbose_name='营业外收入')),
                ('non_oper_exp', models.FloatField(verbose_name='营业外支出')),
                ('nca_disploss', models.FloatField(verbose_name='非流动资产处置净损失')),
                ('total_profit', models.FloatField(verbose_name='利润总额')),
                ('income_tax', models.FloatField(verbose_name='所得税费用')),
                ('n_income', models.FloatField(verbose_name='净利润(含少数股东损益)')),
                ('n_income_attr_p', models.FloatField(verbose_name='净利润(不含少数股东损益)')),
                ('minority_gain', models.FloatField(verbose_name='少数股东损益')),
                ('oth_compr_income', models.FloatField(verbose_name='其他综合收益')),
                ('t_compr_income', models.FloatField(verbose_name='综合收益总额')),
                ('compr_inc_attr_p', models.FloatField(verbose_name='归属于母公司(或股东)的综合收益总额')),
                ('compr_inc_attr_m_s', models.FloatField(verbose_name='归属于少数股东的综合收益总额')),
                ('ebit', models.FloatField(verbose_name='息税前利润')),
                ('ebitda', models.FloatField(verbose_name='息税折旧摊销前利润')),
                ('insurance_exp', models.FloatField(verbose_name='保险业务支出')),
                ('undist_profit', models.FloatField(verbose_name='年初未分配利润')),
                ('distable_profit', models.FloatField(verbose_name='可分配利润')),
                ('update_flag', models.CharField(max_length=15, verbose_name='公告日期')),
            ],
            options={
                'db_table': 'income',
            },
        ),
        migrations.CreateModel(
            name='TraderAccount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.CharField(max_length=15, verbose_name='统计周期')),
                ('weekly_new', models.FloatField(verbose_name='本周新增（万）')),
                ('total', models.FloatField(verbose_name='期末总账户数（万）')),
                ('weekly_hold', models.FloatField(verbose_name='本周持仓账户数（万）')),
                ('weekly_trade', models.FloatField(verbose_name='本周参与交易账户数（万）')),
            ],
            options={
                'db_table': 'trader_account',
            },
        ),
    ]
